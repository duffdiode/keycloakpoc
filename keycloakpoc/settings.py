"""
Django settings for keycloakpoc project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from pathlib import Path

# Try to load environment specific variables module if it exists
try:
    from . import environment
except ImportError:
    environment = None


def set_env_vars(variables: list):
    """
    If specified variables exist in loaded environment module, set them in global namespace
    :param variables:
    """
    try:
        environment.__dict__
    except AttributeError:
        return

    for name in variables:
        if name in environment.__dict__:
            globals()[name] = environment.__dict__[name]
    

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f5=8)p6w!m0#^i^9=q=x25q42$mdoqfunr^gh+0wc*x$=s3bed'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'keycloaklogin.apps',
    'keycloaklogin.apps.KeyloginConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'keycloakpoc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'keycloakpoc.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DB_USER = 'postgres'
DB_PASS = 'password'
DB_NAME = 'keycloakauth'
DB_HOST = 'localhost'
DB_PORT = '5432'

set_env_vars(['DB_USER', 'DB_PASS', 'DB_NAME', 'DB_HOST', 'DB_PORT'])

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASS,
        'HOST': DB_HOST,
        'PORT': DB_PORT
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

AUTHENTICATION_BACKENDS = [
    'keycloaklogin.auth.KeycloakAuthenticationBackend'
]

SESSION_COOKIE_AGE = 600
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = True

APP_BASE_URL = 'http://localhost:8000'
KEYCLOAK_BASE_URL = 'http://localhost:5392/auth/realms/myrealm/protocol/openid-connect'
KEYCLOAK_CLIENT_ID = 'djangokcpoc'
KEYCLOAK_CLIENT_SECRET = ''

set_env_vars(['APP_BASE_URL', 'KEYCLOAK_BASE_URL', 'KEYCLOAK_CLIENT_ID', 'KEYCLOAK_CLIENT_SECRET'])

KEYCLOAK_AUTHORISATION_ENDPOINT = f"{KEYCLOAK_BASE_URL}/auth"
KEYCLOAK_TOKEN_ENDPOINT = f"{KEYCLOAK_BASE_URL}/token"
KEYCLOAK_USERINFO_ENDPOINT = f"{KEYCLOAK_BASE_URL}/userinfo"
KEYCLOAK_END_SESSION_ENDPOINT = f"{KEYCLOAK_BASE_URL}/logout"

OAUTH_PARAMS = {'client_id': KEYCLOAK_CLIENT_ID,
                'redirect_uri': f'{APP_BASE_URL}/login/redirect',
                'response_type': 'code',
                'scope': 'openid'}



